Тонке налаштування та розгортання
=================================

Ми близькі до завершення розробки додатка — системи керування блогом. 
Перед розгортанням ми б хотіли зробити деякі налаштування.

Зміна домашньої сторінки
------------------------

Будемо використовувати список записів у якості домашньої сторінки.
Для цього змінимо
[конфігурацію додатка](/doc/guide/uk/basics.application#application-configuration)
наступним чином:

~~~
[php]
return array(
	…
	'defaultController'=>'post',
	…
);
~~~

> Tip|Підказка: Оскільки контролер `PostController` вже оголошує дію
`index` дією за замовчуванням, то при зверненні до домашньої сторінки додатка
ми побачимо результат, згенерований дією `index` контролера записів.

Увімкнення кешування схеми
--------------------------

ActiveRecord покладається на метадані про таблиці для визначення
інформації про стовпці, тому витрачається час для читання метаданих і їх
аналізу. Це, можливо, не проблема на стадії розробки, але для робочого
додатка це — марна трата часу, якщо схема бази даних не змінюється.
Тому ми повинні увімкнути кешування схеми, змінивши конфігурацію додатка
наступним чином:

~~~
[php]
return array(
	…
	'components'=>array(
		…
		'cache'=>array(
			'class'=>'CDbCache',
		),
		'db'=>array(
			'class'=>'system.db.CDbConnection',
			'connectionString'=>'sqlite:/wwwroot/blog/protected/data/blog.db',
			'schemaCachingDuration'=>3600,
		),
	),
);
~~~

У коді вище ми спочатку додаємо компонент `cache`, який використовує базу
даних SQLite, визначену за замовчуванням, як сховище кеша. 
Якщо наш сервер має інші розширення кешу, такі як APC, 
ми могли б так само легко їх використовувати. 
Ми також змінюємо компонент `db`, встановлюючи властивість
[schemaCachingDuration|CDbConnection::schemaCachingDuration] у значення 3600,
що означає, що отримані дані схеми бази даних можуть залишатися
валідними у кеші протягом 3600 секунд.

Відключення дебаг-режиму
------------------------

Змінимо файл точки входу `/wwwroot/blog/index.php`, видаливши рядок, 
який визначає константу `YII_DEBUG`. 
Ця константа корисна під час стадії розробки, тому що дозволяє Yii 
відображати більше інформації про налагодження при виникненні
помилки. Однак, коли додаток виконується у робочому режимі, відображати
інформацію про налагодження — не дуже гарна ідея, тому що вона може містити
секретну інформацію, таку як розташування файлу скрипта, зміст файлу та ін.

Розгортання додатка
-------------------

Заключне розгортання головним чином включає в себе копіювання
директорії `/wwwroot/blog` у цільову директорію. 
Наступний контрольний список містить всі необхідні кроки:

 1. Встановіть Yii в місце призначення, якщо він ще не встановлений;
 2. Скопіюйте всю директорію `/wwwroot/blog` у місце призначення;
 3. Відредагуйте файл точки входу `index.php`, 
    вказавши у змінній `$yii` шлях до файлу початкового завантаження Yii;
 4. Відредагуйте файл `protected/yiic.php`, вказавши у змінній `$yiic` шлях до нового файлу
    `yiic.php`;
 5. Змініть права директорій `assets` та `protected/runtime` так, щоб вони мали доступ на перезапис процесом Web-сервера.
